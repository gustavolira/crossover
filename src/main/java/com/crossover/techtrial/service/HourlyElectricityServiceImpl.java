package com.crossover.techtrial.service;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.Query;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import com.crossover.techtrial.dto.DailyElectricity;
import com.crossover.techtrial.model.HourlyElectricity;
import com.crossover.techtrial.repository.HourlyElectricityRepository;

/**
 * HourlyElectricityServiceImpl will handle electricity generated by a Panel.
 *
 * @author Crossover
 *
 */

@Service
public class HourlyElectricityServiceImpl implements HourlyElectricityService {
	private final static int YESTERDAY = -1;
	
  @Autowired
  HourlyElectricityRepository hourlyElectricityRepository;
  
  @Autowired
  EntityManager em;
  
  public HourlyElectricity save(HourlyElectricity hourlyElectricity) {
    return hourlyElectricityRepository.save(hourlyElectricity);
  }
  
  public Page<HourlyElectricity> getAllHourlyElectricityByPanelId(Long panelId, Pageable pageable) {
    return hourlyElectricityRepository.findAllByPanelIdOrderByReadingAtDesc(panelId, pageable);
  }

@SuppressWarnings("unchecked")
@Override
public List<DailyElectricity> getAllAverageElectricity(Long panelId) {
	Query query = em.createNativeQuery("SELECT sum(generated_electricity), max(generated_electricity), min(generated_electricity), avg(generated_electricity) as average "
			+ "FROM crosssolar.hourly_electricity "
			+ "WHERE reading_at > cast((curdate()?) as date) and panel_id = ? "
			+ "GROUP BY CAST(reading_at AS DATE)");
	query.setParameter(1, YESTERDAY);
	query.setParameter(2, 2L);
	
	return query.getResultList();
}
  
}